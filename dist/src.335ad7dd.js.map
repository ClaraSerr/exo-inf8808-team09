{"version":3,"sources":["scripts/helper.js","scripts/preprocess.js","scripts/grouped-quantile.js","index.js"],"names":["generateMapG","width","height","d3","select","append","attr","generateMarkerG","setCanvasSize","getClosestStep","nSteps","domain","BEST_STEPS","step","stepDiff","bestStep","length","i","push","Math","abs","getSteps","steps","firstStep","floor","unshift","getQuantiles","array","quantiles","sort","ascending","quantile","median","getWeekNumber","d","Date","UTC","getFullYear","getMonth","getDate","setUTCDate","getUTCDate","getUTCDay","yearStart","getUTCFullYear","weekNo","ceil","addDayType","data","jour_semaine","date","getDay","type_jour","isNaN","voyage","ferie","aggregateData","csvData","vizData","startDate","endDate","typeJour","ligne","girouettes","posLigne","findIndex","e","posGirouette","girouette","Girouette","voyages","posVoyage","arrets","posArret","codeArret","arret_code","nomArret","arret_nom","sequenceArret","sequence_arret","minutesEcart","Map","moyMinutesEcart","nClients","moyNClients","ponctualite","tauxPonctualite","minutesEcartClient","moyMinutesEcartClient","set","Minutes_ecart_planifie","montants","Etat_Ponctualite","forEach","arret","sumMinutesEcart","v","size","sumNClients","sumMinutesEcartClient","countPonctuel","aggregateDataForViz3","lignes","posDate","valueOf","MARGIN","top","right","bottom","left","FONT_SIZE","DIRECTIONS_ANGLE","QUANTILE_STROKE_COLOR","QUANTILE_FILL_COLOR","QUANTILE_STROKE_WIDTH","NUMBER_OF_TICKS","GRADIENT_COLORS","GRADIENT_THRESHOLDS","selectValue","generateViz3","container","delayGraphContainer","style","trafficGraphContainer","ResizeObserver","generateDelayGraph","observe","node","generateTrafficGraph","quantileSets","getDelayQuantileSets","title","generateGroupedQuantileGraph","svg","dataScale","HEIGHT","getBoundingClientRect","WIDTH","min","selectAll","enter","insert","text","legend","middleY","squareWidth","paddingX","paddingY","getTrafficQuantileSets","quantileTripSets","quantileDaySets","quantileWeekSets","weekOption","document","createElement","value","innerHTML","dayOption","tripOption","appendChild","addEventListener","setTrafficGraph","setAttribute","toString","html","BAR_WIDTH","linesScale","scaleOrdinal","lines","range","directionsRange","line","directionsScale","directions","maxValue","Number","MIN_SAFE_INTEGER","minValue","MAX_SAFE_INTEGER","scaleLinear","xAxis","lineValuesY","directionValuesY","x","yAxis","helper","y","bars","q3","q2","q1","yValues","max","j","round","on","delaySets","day","direction","trip","stop","delaySet","tripSets","daySets","weekSets","lastWeek","parse","weekClients","week","dayClients","tripClients","tripSet","daySet","weekSet","svgSize","csv","then","arret_Latitude","arret_Longitude","preprocess","groupedQuantile"],"mappings":"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","file":"src.335ad7dd.js","sourceRoot":"..\\src","sourcesContent":["\r\n/**\r\n * Generates the SVG element g which will contain the map base.\r\n *\r\n * @param {number} width The width of the graph\r\n * @param {number} height The height of the graph\r\n * @returns {*} The d3 Selection for the created g element\r\n */\r\nexport function generateMapG (width, height) {\r\n  return d3.select('.graph')\r\n    .select('svg')\r\n    .append('g')\r\n    .attr('id', 'map-g')\r\n    .attr('width', width)\r\n    .attr('height', height)\r\n}\r\n\r\n/**\r\n * Generates the SVG element g which will contain the map markers.\r\n *\r\n * @param {number} width The width of the graph\r\n * @param {number} height The height of the graph\r\n * @returns {*} The d3 Selection for the created g element\r\n */\r\nexport function generateMarkerG (width, height) {\r\n  return d3.select('.graph')\r\n    .select('svg')\r\n    .append('g')\r\n    .attr('id', 'marker-g')\r\n    .attr('width', width)\r\n    .attr('height', height)\r\n}\r\n\r\n/**\r\n * Sets the size of the SVG canvas containing the graph.\r\n *\r\n * @param {number} width The desired width\r\n * @param {number} height The desired height\r\n */\r\nexport function setCanvasSize (width, height) {\r\n  d3.select('#map').select('svg')\r\n    .attr('width', width)\r\n    .attr('height', height)\r\n}\r\n\r\n\r\n/**\r\n * @param {number} nSteps The ideal number of steps\r\n * @param {*} domain Domain of d3 scale\r\n * @returns {number} The best step to use\r\n */\r\nexport function getClosestStep (nSteps, domain) {\r\n  const BEST_STEPS = [\r\n    0.1, 0.2, 0.25, 0.5,\r\n    1, 2, 2.5, 5,\r\n    10, 20, 25, 50,\r\n    100, 200, 250, 500,\r\n    1000, 2000, 2500, 5000,\r\n    10000, 20000, 25000, 50000\r\n  ]\r\n  var step = (domain[1] - domain[0]) / nSteps\r\n  var stepDiff = []\r\n  var bestStep = BEST_STEPS[BEST_STEPS.length - 1]\r\n  for (let i = 0; i < BEST_STEPS.length; i++) {\r\n    stepDiff.push(Math.abs(BEST_STEPS[i] - step))\r\n    if (i > 0 && stepDiff[i] > stepDiff[i - 1]) {\r\n      bestStep = BEST_STEPS[i - 1]\r\n      break\r\n    }\r\n  }\r\n  return bestStep\r\n}\r\n\r\n/**\r\n * @param {number} nSteps The ideal number of steps\r\n * @param {*} domain Domain of d3 scale\r\n * @returns {Array<number>} The best steps\r\n */\r\nexport function getSteps (nSteps, domain) {\r\n  var step = getClosestStep(nSteps, domain)\r\n  var steps = []\r\n  if (domain[0] <= 0 && domain[1] >= 0) {\r\n    steps.push(0)\r\n  } else {\r\n    let firstStep = Math.floor(domain[0])\r\n    while (firstStep % step !== 0) {\r\n      firstStep += 1\r\n    }\r\n    steps.push(firstStep)\r\n  }\r\n  while (steps[steps.length - 1] < domain[1] - step) {\r\n    steps.push(steps[steps.length - 1] + step)\r\n  }\r\n  while (steps[0] > domain[0] + step) {\r\n    steps.unshift(steps[0] - step)\r\n  }\r\n  return steps\r\n}\r\n\r\n/**\r\n * @param {Array<number>} array Array of numeric values\r\n * @returns {Array<number>} The quantiles\r\n */\r\nexport function getQuantiles (array) {\r\n  array = array.sort(d3.ascending)\r\n  const quantiles = [\r\n    array[0],\r\n    d3.quantile(array, 0.25),\r\n    d3.median(array),\r\n    d3.quantile(array, 0.75),\r\n    array[array.length - 1]\r\n  ]\r\n  return quantiles\r\n}\r\n\r\n/**\r\n * @param {Date} d date\r\n * @returns {number} weekNo\r\n */\r\nexport function getWeekNumber (d) {\r\n  // Copy date so don't modify original\r\n  d = new Date(Date.UTC(d.getFullYear(), d.getMonth(), d.getDate()))\r\n  // Set to nearest Thursday: current date + 4 - current day number\r\n  // Make Sunday's day number 7\r\n  d.setUTCDate(d.getUTCDate() + 4 - (d.getUTCDay() || 7))\r\n  // Get first day of year\r\n  var yearStart = new Date(Date.UTC(d.getUTCFullYear(), 0, 1))\r\n  // Calculate full weeks to nearest Thursday\r\n  var weekNo = Math.ceil((((d - yearStart) / 86400000) + 1) / 7)\r\n  // Return array of year and week number\r\n  return [d.getUTCFullYear(), weekNo]\r\n}\r\n","// INF8808 - Exo\r\n//\r\n// Adam Prévost - 1947205\r\n// Armelle Jézéquel - 2098157\r\n// Clara Serruau - 2164678\r\n// Jules Lefebvre - 1847158\r\n// Julien Dupuis - 1960997\r\n//\r\n\r\n/**\r\n * Ajout de champs à l'objet\r\n * jour_semaine {0, 1, 2, 3, 4, 5, 6} où 0 = Dimanche\r\n * type_jour {semaine, fin de semaine}\r\n * ferie {true, false}\r\n *\r\n * @param {object[]} data L'array d'objets qui contient les lignes du csv\r\n */\r\nexport function addDayType (data) {\r\n  for (var i = 0; i < data.length; i++) {\r\n    // jour_semaine\r\n    data[i].jour_semaine = data[i].date.getDay()\r\n\r\n    // type_jour\r\n    data[i].jour_semaine === (0 || 6) ? data[i].type_jour = 'fin de semaine' : data[i].type_jour = 'semaine'\r\n\r\n    // ferie\r\n    isNaN(data[i].voyage) ? data[i].ferie = true : data[i].ferie = false\r\n  }\r\n}\r\n/**\r\n * aggregateData() remplit l'objet vizData à partir des données du csv (data)\r\n *\r\n * @param {*} csvData L'array d'objets qui contient les lignes du csv, modifié par preprocess.addDayType()\r\n * @param {*} vizData L'array d'objets qui contient les données consolidées requises pour générer les viz\r\n * @param {*} startDate Date de début\r\n * @param {*} endDate Date de fin\r\n * @param {*} typeJour On considère semaine ou weekend\r\n * @param {*} ferie On considère les fériés si true\r\n */\r\nexport function aggregateData (csvData, vizData, startDate, endDate, typeJour, ferie) {\r\n  // Boucle sur les lignes de csvData pour remplir la structure vizData\r\n  for (var i = 0; i < csvData.length; i++) {\r\n    if (csvData[i].date >= startDate && csvData[i].date <= endDate && csvData[i].type_jour === typeJour && csvData[i].ferie === ferie) {\r\n      if (vizData.length === 0) {\r\n        vizData.push({ ligne: csvData[i].ligne, girouettes: [] })\r\n      }\r\n\r\n      // On ajoute la ligne si elle n'existe pas déjà dans vizData\r\n      var posLigne = vizData.findIndex(e => e.ligne === csvData[i].ligne)\r\n      if (posLigne === -1) {\r\n        vizData.push({ ligne: csvData[i].ligne, girouettes: [] })\r\n        posLigne = vizData.length - 1\r\n      }\r\n\r\n      // On ajoute la girouette si elle n'existe pas déjà dans vizData\r\n      var posGirouette = vizData[posLigne].girouettes.findIndex(e => e.girouette === csvData[i].Girouette)\r\n      if (posGirouette === -1) {\r\n        vizData[posLigne].girouettes.push({ girouette: csvData[i].Girouette, voyages: [] })\r\n        posGirouette = vizData[posLigne].girouettes.length - 1\r\n      }\r\n\r\n      // On ajoute le voyage s'il n'existe pas déjà dans vizData\r\n      var posVoyage = vizData[posLigne].girouettes[posGirouette].voyages.findIndex(e => e.voyage === csvData[i].voyage)\r\n      if (posVoyage === -1) {\r\n        vizData[posLigne].girouettes[posGirouette].voyages.push({ voyage: csvData[i].voyage, arrets: [] })\r\n        posVoyage = vizData[posLigne].girouettes[posGirouette].voyages.length - 1\r\n      }\r\n\r\n      // On ajoute l'arrêt s'il n'existe pas déjà dans vizData\r\n      var posArret = vizData[posLigne].girouettes[posGirouette].voyages[posVoyage].arrets.findIndex(e => e.codeArret === csvData[i].arret_code)\r\n      if (posArret === -1) {\r\n        vizData[posLigne].girouettes[posGirouette].voyages[posVoyage].arrets.push(\r\n          {\r\n            codeArret: csvData[i].arret_code,\r\n            nomArret: csvData[i].arret_nom,\r\n            sequenceArret: csvData[i].sequence_arret,\r\n            minutesEcart: new Map(),\r\n            moyMinutesEcart: null,\r\n            nClients: new Map(),\r\n            moyNClients: null,\r\n            ponctualite: new Map(),\r\n            tauxPonctualite: null,\r\n            minutesEcartClient: new Map(),\r\n            moyMinutesEcartClient: null\r\n          })\r\n        posArret = vizData[posLigne].girouettes[posGirouette].voyages[posVoyage].arrets.length - 1\r\n      }\r\n\r\n      vizData[posLigne].girouettes[posGirouette].voyages[posVoyage].arrets[posArret].minutesEcart.set(csvData[i].date, csvData[i].Minutes_ecart_planifie)\r\n      vizData[posLigne].girouettes[posGirouette].voyages[posVoyage].arrets[posArret].nClients.set(csvData[i].date, csvData[i].montants)\r\n      vizData[posLigne].girouettes[posGirouette].voyages[posVoyage].arrets[posArret].ponctualite.set(csvData[i].date, csvData[i].Etat_Ponctualite)\r\n      vizData[posLigne].girouettes[posGirouette].voyages[posVoyage].arrets[posArret].minutesEcartClient.set(csvData[i].date, csvData[i].Minutes_ecart_planifie * csvData[i].montants)\r\n    }\r\n  }\r\n\r\n  // Parcours de vizData pour calculer les indicateurs pour chaque ligne.arret\r\n  vizData.forEach(function (ligne) {\r\n    ligne.girouettes.forEach(function (girouette) {\r\n      girouette.voyages.forEach(function (voyage) {\r\n        voyage.arrets.forEach(function (arret) {\r\n          var sumMinutesEcart = 0\r\n          arret.minutesEcart.forEach(v => { sumMinutesEcart += v })\r\n          arret.moyMinutesEcart = sumMinutesEcart / arret.minutesEcart.size\r\n\r\n          var sumNClients = 0\r\n          arret.nClients.forEach(v => { sumNClients += v })\r\n          arret.moyNClients = sumNClients / arret.nClients.size\r\n\r\n          var sumMinutesEcartClient = 0\r\n          arret.minutesEcartClient.forEach(v => { sumMinutesEcartClient += v })\r\n          arret.moyMinutesEcartClient = sumMinutesEcartClient / arret.minutesEcartClient.size\r\n\r\n          var countPonctuel = 0\r\n          arret.ponctualite.forEach(v => { if (v === 'Ponctuel') { countPonctuel++ } })\r\n          arret.tauxPonctualite = countPonctuel / arret.ponctualite.size\r\n        })\r\n      })\r\n    })\r\n  })\r\n}\r\n\r\n/**\r\n * aggregateDataForViz3() remplit l'objet vizData à partir des données du csv (data)\r\n *\r\n * @param {*} csvData L'array d'objets qui contient les lignes du csv, modifié par preprocess.addDayType()\r\n * @param {*} vizData L'array d'objets qui contient les données consolidées requises pour générer les viz\r\n * @param {*} startDate Date de début\r\n * @param {*} endDate Date de fin\r\n * @param {*} typeJour On considère semaine ou weekend\r\n * @param {*} ferie On considère les fériés si true\r\n */\r\nexport function aggregateDataForViz3 (csvData, vizData, startDate, endDate, typeJour, ferie) {\r\n  // Boucle sur les lignes de csvData pour remplir la structure vizData\r\n  for (var i = 0; i < csvData.length; i++) {\r\n    if (csvData[i].date >= startDate && csvData[i].date <= endDate && csvData[i].type_jour === typeJour && csvData[i].ferie === ferie) {\r\n      if (vizData.length === 0) {\r\n        vizData.push({ date: csvData[i].date, lignes: [] })\r\n      }\r\n\r\n      // On ajoute la date si elle n'existe pas déjà dans vizData\r\n      var posDate = vizData.findIndex(e => e.date.valueOf() === csvData[i].date.valueOf())\r\n      if (posDate === -1) {\r\n        vizData.push({ date: csvData[i].date, lignes: [] })\r\n        posDate = vizData.length - 1\r\n      }\r\n\r\n      // On ajoute la ligne si elle n'existe pas déjà dans vizData\r\n      var posLigne = vizData[posDate].lignes.findIndex(e => e.ligne === csvData[i].ligne)\r\n      if (posLigne === -1) {\r\n        vizData[posDate].lignes.push({ ligne: csvData[i].ligne, girouettes: [] })\r\n        posLigne = vizData[posDate].lignes.length - 1\r\n      }\r\n\r\n      // On ajoute la girouette si elle n'existe pas déjà dans vizData\r\n      var posGirouette = vizData[posDate].lignes[posLigne].girouettes.findIndex(e => e.girouette === csvData[i].Girouette)\r\n      if (posGirouette === -1) {\r\n        vizData[posDate].lignes[posLigne].girouettes.push({ girouette: csvData[i].Girouette, voyages: [] })\r\n        posGirouette = vizData[posDate].lignes[posLigne].girouettes.length - 1\r\n      }\r\n\r\n      // On ajoute le voyage s'il n'existe pas déjà dans vizData\r\n      var posVoyage = vizData[posDate].lignes[posLigne].girouettes[posGirouette].voyages.findIndex(e => e.voyage === csvData[i].voyage)\r\n      if (posVoyage === -1) {\r\n        vizData[posDate].lignes[posLigne].girouettes[posGirouette].voyages.push({ voyage: csvData[i].voyage, arrets: [] })\r\n        posVoyage = vizData[posDate].lignes[posLigne].girouettes[posGirouette].voyages.length - 1\r\n      }\r\n\r\n      // On ajoute l'arrêt s'il n'existe pas déjà dans vizData\r\n      var posArret = vizData[posDate].lignes[posLigne].girouettes[posGirouette].voyages[posVoyage].arrets.findIndex(e => e.codeArret === csvData[i].arret_code)\r\n      if (posArret === -1) {\r\n        vizData[posDate].lignes[posLigne].girouettes[posGirouette].voyages[posVoyage].arrets.push(\r\n          {\r\n            codeArret: csvData[i].arret_code,\r\n            nomArret: csvData[i].arret_nom,\r\n            sequenceArret: csvData[i].sequence_arret,\r\n            minutesEcart: csvData[i].Minutes_ecart_planifie,\r\n            nClients: csvData[i].montants,\r\n            ponctualite: csvData[i].Etat_Ponctualite,\r\n            minutesEcartClient: csvData[i].Minutes_ecart_planifie * csvData[i].montants\r\n          })\r\n        posArret = vizData[posDate].lignes[posLigne].girouettes[posGirouette].voyages[posVoyage].arrets.length - 1\r\n      }\r\n    }\r\n  }\r\n}\r\n","import * as helper from './helper.js'\r\n\r\nconst MARGIN = { top: 52, right: 80, bottom: 100, left: 80 }\r\nconst FONT_SIZE = 14\r\nconst DIRECTIONS_ANGLE = -45\r\nconst QUANTILE_STROKE_COLOR = 'black'\r\nconst QUANTILE_FILL_COLOR = 'lightgray'\r\nconst QUANTILE_STROKE_WIDTH = 2\r\nconst NUMBER_OF_TICKS = 10\r\nconst GRADIENT_COLORS = ['#ff9999', '#99ff99', '#ffff99']\r\nconst GRADIENT_THRESHOLDS = ['10', '5', '0', '-5']\r\n\r\nvar selectValue = ''\r\n\r\n/**\r\n * @param vizData\r\n */\r\nexport function generateViz3 (vizData) {\r\n  // Split container in two\r\n  var container = d3.select('#grouped-quantile-graph-container')\r\n  var delayGraphContainer = container.append('div')\r\n    .style('width', '50%')\r\n    .style('height', '100%')\r\n    .style('float', 'left')\r\n  var trafficGraphContainer = container.append('div')\r\n    .style('width', '50%')\r\n    .style('height', '100%')\r\n    .style('float', 'right')\r\n\r\n  // TODO: Fetch data\r\n  var data = {}\r\n  data.lines = ['9', '22']\r\n  data.directions = ['Lafontaine', 'Montmorency', 'Côté', 'George VI']\r\n\r\n  // Regenerate graphs on resize\r\n  new ResizeObserver(() => { generateDelayGraph(delayGraphContainer, data, vizData) })\r\n    .observe(delayGraphContainer.node())\r\n  new ResizeObserver(() => { generateTrafficGraph(trafficGraphContainer, data, vizData) })\r\n    .observe(trafficGraphContainer.node())\r\n}\r\n\r\n/**\r\n * @param {Selection} container The div to generate the graph in\r\n * @param {object} data The data to fetch\r\n * @param vizData\r\n */\r\nexport function generateDelayGraph (container, data, vizData) {\r\n  // Fetch data\r\n  data.quantileSets = getDelayQuantileSets(vizData)\r\n\r\n  // Generate common graph\r\n  data.title = 'Retard Moyen'\r\n  var [svg, dataScale] = generateGroupedQuantileGraph(container, data)\r\n  var HEIGHT = container.node().getBoundingClientRect().height\r\n  var WIDTH = Math.min(HEIGHT, container.node().getBoundingClientRect().width)\r\n\r\n  // Set gradients\r\n  svg.append('defs')\r\n    .append('linearGradient')\r\n    .attr('id', 'late-grad')\r\n    .attr('x1', '0%')\r\n    .attr('x2', '0%')\r\n    .attr('y1', '0%')\r\n    .attr('y2', '100%')\r\n    .selectAll('stop')\r\n    .data([GRADIENT_COLORS[0], GRADIENT_COLORS[1]])\r\n    .enter()\r\n    .append('stop')\r\n    .style('stop-color', function (d) { return d })\r\n    .attr('offset', function (d, i) { return 100 * i + '%' })\r\n  svg.append('defs')\r\n    .append('linearGradient')\r\n    .attr('id', 'early-grad')\r\n    .attr('x1', '0%')\r\n    .attr('x2', '0%')\r\n    .attr('y1', '0%')\r\n    .attr('y2', '100%')\r\n    .selectAll('stop')\r\n    .data([GRADIENT_COLORS[1], GRADIENT_COLORS[2]])\r\n    .enter()\r\n    .append('stop')\r\n    .style('stop-color', function (d) { return d })\r\n    .attr('offset', function (d, i) { return 100 * i + '%' })\r\n  // Draw gradients\r\n  svg.insert('rect', '#x-axis')\r\n    .attr('width', WIDTH - MARGIN.left - MARGIN.right)\r\n    .attr('x', MARGIN.left)\r\n    .attr('height', dataScale(GRADIENT_THRESHOLDS[0]) - MARGIN.top)\r\n    .attr('y', MARGIN.top)\r\n    .attr('fill', GRADIENT_COLORS[0])\r\n  svg.insert('rect', '#x-axis')\r\n    .attr('width', WIDTH - MARGIN.left - MARGIN.right)\r\n    .attr('x', MARGIN.left)\r\n    .attr('height', dataScale(GRADIENT_THRESHOLDS[1]) - dataScale(GRADIENT_THRESHOLDS[0]))\r\n    .attr('y', dataScale(GRADIENT_THRESHOLDS[0]))\r\n    .attr('fill', 'url(#late-grad)')\r\n  svg.insert('rect', '#x-axis')\r\n    .attr('width', WIDTH - MARGIN.left - MARGIN.right)\r\n    .attr('x', MARGIN.left)\r\n    .attr('height', dataScale(GRADIENT_THRESHOLDS[2]) - dataScale(GRADIENT_THRESHOLDS[1]))\r\n    .attr('y', dataScale(GRADIENT_THRESHOLDS[1]))\r\n    .attr('fill', GRADIENT_COLORS[1])\r\n  svg.insert('rect', '#x-axis')\r\n    .attr('width', WIDTH - MARGIN.left - MARGIN.right)\r\n    .attr('x', MARGIN.left)\r\n    .attr('height', dataScale(GRADIENT_THRESHOLDS[3]) - dataScale(GRADIENT_THRESHOLDS[2]))\r\n    .attr('y', dataScale(GRADIENT_THRESHOLDS[2]))\r\n    .attr('fill', 'url(#early-grad)')\r\n  svg.insert('rect', '#x-axis')\r\n    .attr('width', WIDTH - MARGIN.left - MARGIN.right)\r\n    .attr('x', MARGIN.left)\r\n    .attr('height', HEIGHT - MARGIN.bottom - dataScale(GRADIENT_THRESHOLDS[3]))\r\n    .attr('y', dataScale(GRADIENT_THRESHOLDS[3]))\r\n    .attr('fill', GRADIENT_COLORS[2])\r\n\r\n  // Set y axis label\r\n  svg.select('#y-axis > .label')\r\n    .text('Minute')\r\n    .attr('fill', '#898989')\r\n\r\n  // Legend\r\n  const legend = svg.insert('g', '#x-axis').style('font-size', '12px')\r\n  const middleY = (HEIGHT - MARGIN.top - MARGIN.bottom) / 2 + MARGIN.top\r\n  const squareWidth = FONT_SIZE * 2 / 3\r\n  const paddingX = FONT_SIZE * 2\r\n  const paddingY = FONT_SIZE * 1.5\r\n  legend.append('rect')\r\n    .attr('width', squareWidth)\r\n    .attr('x', WIDTH - MARGIN.right + FONT_SIZE)\r\n    .attr('height', squareWidth)\r\n    .attr('y', middleY - paddingY)\r\n    .attr('stroke', QUANTILE_STROKE_COLOR)\r\n    .attr('fill', GRADIENT_COLORS[0])\r\n  legend.append('text')\r\n    .attr('x', WIDTH - MARGIN.right + paddingX)\r\n    .attr('y', middleY - paddingY + squareWidth)\r\n    .text('Retard')\r\n  legend.append('rect')\r\n    .attr('width', squareWidth)\r\n    .attr('x', WIDTH - MARGIN.right + FONT_SIZE)\r\n    .attr('height', squareWidth)\r\n    .attr('y', middleY)\r\n    .attr('stroke', QUANTILE_STROKE_COLOR)\r\n    .attr('fill', GRADIENT_COLORS[1])\r\n  legend.append('text')\r\n    .attr('x', WIDTH - MARGIN.right + paddingX)\r\n    .attr('y', middleY + squareWidth)\r\n    .text('Ponctuel')\r\n  legend.append('rect')\r\n    .attr('width', squareWidth)\r\n    .attr('x', WIDTH - MARGIN.right + FONT_SIZE)\r\n    .attr('height', squareWidth)\r\n    .attr('y', middleY + paddingY)\r\n    .attr('stroke', QUANTILE_STROKE_COLOR)\r\n    .attr('fill', GRADIENT_COLORS[2])\r\n  legend.append('text')\r\n    .attr('x', WIDTH - MARGIN.right + paddingX)\r\n    .attr('y', middleY + paddingY + squareWidth)\r\n    .text('Avance')\r\n}\r\n\r\n/**\r\n * @param {Selection} container The div to generate the graph in\r\n * @param {object} data The data to fetch\r\n * @param vizData\r\n */\r\nexport function generateTrafficGraph (container, data, vizData) {\r\n  // Fetch data\r\n  const [quantileTripSets, quantileDaySets, quantileWeekSets] = getTrafficQuantileSets(vizData)\r\n  if (selectValue === '') {\r\n    data.quantileSets = quantileTripSets\r\n  } else {\r\n    if (selectValue === 'week') {\r\n      data.quantileSets = quantileWeekSets\r\n    } else if (selectValue === 'day') {\r\n      data.quantileSets = quantileDaySets\r\n    } else if (selectValue === 'trip') {\r\n      data.quantileSets = quantileTripSets\r\n    }\r\n  }\r\n\r\n  // Create select\r\n  const weekOption = document.createElement('option')\r\n  weekOption.value = 'week'\r\n  weekOption.innerHTML = 'semaine'\r\n  const dayOption = document.createElement('option')\r\n  dayOption.value = 'day'\r\n  dayOption.innerHTML = 'jour'\r\n  const tripOption = document.createElement('option')\r\n  tripOption.value = 'trip'\r\n  tripOption.innerHTML = 'trajet'\r\n  const select = document.createElement('select')\r\n  select.appendChild(tripOption)\r\n  select.appendChild(dayOption)\r\n  select.appendChild(weekOption)\r\n  if (selectValue !== '') {\r\n    select.value = selectValue\r\n  }\r\n  select.addEventListener('change', function () {\r\n    if (this.value === 'week') {\r\n      data.quantileSets = quantileWeekSets\r\n    } else if (this.value === 'day') {\r\n      data.quantileSets = quantileDaySets\r\n    } else if (this.value === 'trip') {\r\n      data.quantileSets = quantileTripSets\r\n    }\r\n    selectValue = this.value\r\n    setTrafficGraph(container, data, select)\r\n  })\r\n  // generate traffic graph\r\n  setTrafficGraph(container, data, select)\r\n}\r\n\r\n/**\r\n * @param {Selection} container The div to generate the graph in\r\n * @param {object} data The data to fetch\r\n * @param {object} select select\r\n */\r\nexport function setTrafficGraph (container, data, select) {\r\n  // Generate common graph\r\n  data.title = 'Achalandage Moyen'\r\n  var [svg] = generateGroupedQuantileGraph(container, data)\r\n\r\n  // Position select\r\n  const top = svg.node().getBoundingClientRect().top + 30\r\n  const left = svg.node().getBoundingClientRect().left + MARGIN.left - 70\r\n  select.setAttribute('style', `position: absolute; top: ${top}px; left: ${left}px; font-size: 12px`)\r\n  container.node().appendChild(select)\r\n\r\n  // Label\r\n  svg.select('#y-axis > .label')\r\n    .text('')\r\n  svg.select('#y-axis > .label')\r\n    .append('tspan')\r\n    .attr('x', (MARGIN.left - 1).toString())\r\n    .attr('y', '13')\r\n    .text('Nombre de')\r\n  svg.select('#y-axis > .label')\r\n    .append('tspan')\r\n    .attr('x', (MARGIN.left + 9).toString())\r\n    .attr('y', '25')\r\n    .text('personnes par')\r\n}\r\n\r\n/**\r\n * @param {Selection} container The div to generate the graph in\r\n * @param {object} data The data to display\r\n * @returns {Selection} The generated graph as svg\r\n */\r\nexport function generateGroupedQuantileGraph (container, data) {\r\n  // ===================== SETUP =====================\r\n\r\n  // Delete existing content\r\n  container.html('')\r\n  // Set size\r\n  var HEIGHT = container.node().getBoundingClientRect().height\r\n  var WIDTH = Math.min(HEIGHT, container.node().getBoundingClientRect().width)\r\n  var BAR_WIDTH = (WIDTH - MARGIN.left - MARGIN.right) / 7\r\n  // Create svg\r\n  var svg = container.append('svg')\r\n    .attr('width', WIDTH)\r\n    .attr('height', HEIGHT)\r\n    .attr('style', 'display: block; margin: auto')\r\n\r\n  // ===================== SCALES =====================\r\n\r\n  // Create lines scale\r\n  var linesScale = d3.scaleOrdinal()\r\n    .domain(data.lines)\r\n    .range([MARGIN.left + 2 * BAR_WIDTH, MARGIN.left + 5 * BAR_WIDTH])\r\n  // Create directions scale\r\n  var directionsRange = []\r\n  for (const line of data.lines) {\r\n    directionsRange.push(linesScale(line) - BAR_WIDTH / 2)\r\n    directionsRange.push(linesScale(line) + BAR_WIDTH / 2)\r\n  }\r\n  var directionsScale = d3.scaleOrdinal()\r\n    .domain([...data.directions])\r\n    .range(directionsRange)\r\n  // Create data scale\r\n  var maxValue = Number.MIN_SAFE_INTEGER\r\n  var minValue = Number.MAX_SAFE_INTEGER\r\n  for (const quantiles of data.quantileSets) {\r\n    for (const quantile of quantiles) {\r\n      if (maxValue < quantile) {\r\n        maxValue = quantile\r\n      }\r\n      if (minValue > quantile) {\r\n        minValue = quantile\r\n      }\r\n    }\r\n  }\r\n  var dataScale = d3.scaleLinear()\r\n    .domain([Math.min(minValue, 0), maxValue])\r\n    .range([HEIGHT - MARGIN.bottom - FONT_SIZE / 2, MARGIN.top + FONT_SIZE / 2])\r\n\r\n  // ===================== X AXIS =====================\r\n\r\n  var xAxis = svg.append('g')\r\n    .attr('id', 'x-axis')\r\n  // Draw axis line\r\n  xAxis.append('path')\r\n    .attr('d', d3.line()([\r\n      [MARGIN.left, HEIGHT - MARGIN.bottom],\r\n      [MARGIN.left + 7 * BAR_WIDTH, HEIGHT - MARGIN.bottom]\r\n    ]))\r\n    .attr('stroke', 'black')\r\n  // Draw line values\r\n  const lineValuesY = HEIGHT - MARGIN.bottom + FONT_SIZE * 1.5\r\n  for (const line of data.lines) {\r\n    xAxis.append('text')\r\n      .attr('x', linesScale(line))\r\n      .attr('y', lineValuesY)\r\n      .attr('text-anchor', 'middle')\r\n      .text(line)\r\n      .attr('fill', '#898989')\r\n      .style('font-size', FONT_SIZE)\r\n  }\r\n  // Draw direction values\r\n  const directionValuesY = lineValuesY + FONT_SIZE\r\n  for (let i = 0; i < data.directions.length; i++) {\r\n    const x = directionsScale(data.directions[i])\r\n    xAxis.append('text')\r\n      .attr('text-anchor', 'end')\r\n      .attr('transform', `translate(${x}, ${directionValuesY}) rotate(${DIRECTIONS_ANGLE})`)\r\n      .text(data.directions[i])\r\n      .style('font-size', '12px')\r\n      .attr('font-family', 'sans-serif')\r\n      .attr('class', `direction${i} label`)\r\n  }\r\n  // Draw labels\r\n  xAxis.append('text')\r\n    .attr('x', WIDTH - MARGIN.right + FONT_SIZE / 2)\r\n    .attr('y', lineValuesY)\r\n    .text('Ligne')\r\n    .attr('fill', '#898989')\r\n    .style('font-size', FONT_SIZE)\r\n  xAxis.append('text')\r\n    .attr('x', WIDTH - MARGIN.right + FONT_SIZE / 2)\r\n    .attr('y', directionValuesY + FONT_SIZE)\r\n    .text('Direction')\r\n    .attr('fill', '#898989')\r\n    .style('font-size', FONT_SIZE)\r\n\r\n  // ===================== Y AXIS =====================\r\n\r\n  var yAxis = svg.append('g')\r\n    .attr('id', 'y-axis')\r\n  // Draw axis line\r\n  yAxis.append('path')\r\n    .attr('d', d3.line()([\r\n      [MARGIN.left, MARGIN.top],\r\n      [MARGIN.left, HEIGHT - MARGIN.bottom]\r\n    ]))\r\n    .attr('stroke', 'black')\r\n  // Generate steps\r\n  var steps = helper.getSteps(NUMBER_OF_TICKS, dataScale.domain())\r\n  for (const step of steps) {\r\n    const y = dataScale(step)\r\n    // Draw data values\r\n    yAxis.append('text')\r\n      .attr('text-anchor', 'end')\r\n      .attr('x', MARGIN.left - FONT_SIZE)\r\n      .attr('y', y + FONT_SIZE / 3)\r\n      .text(step)\r\n      .attr('font-family', 'sans-serif')\r\n      .style('font-size', FONT_SIZE)\r\n    // Draw ticks\r\n    yAxis.append('path')\r\n      .attr('d', d3.line()([\r\n        [MARGIN.left - FONT_SIZE / 2, y],\r\n        [MARGIN.left, y]]\r\n      ))\r\n      .attr('stroke', QUANTILE_STROKE_COLOR)\r\n      .attr('stroke-width', QUANTILE_STROKE_WIDTH)\r\n  }\r\n  // Draw labels\r\n  yAxis.append('text')\r\n    .attr('x', MARGIN.left - FONT_SIZE / 2)\r\n    .attr('y', MARGIN.top - FONT_SIZE / 2)\r\n    .attr('class', 'label')\r\n    .attr('text-anchor', 'end')\r\n    .text('Unité de données')\r\n    .attr('fill', '#898989')\r\n    .style('font-size', FONT_SIZE)\r\n\r\n  // ===================== CANDLES =====================\r\n\r\n  var bars = svg.append('g')\r\n    .attr('id', 'candles')\r\n\r\n  // HISTOGRAMME\r\n\r\n  /* for (let i = 0; i < data.quantileSets.length; i++) {\r\n    // Features of the histogram\r\n    var histogram = d3.histogram()\r\n      .domain(dataScale.domain())\r\n      .thresholds(dataScale.ticks(50)) // Important: how many bins approx are going to be made? It is the 'resolution' of the violin plot\r\n      .value(d => d)\r\n    const bins = histogram(data.quantileSets[i])\r\n    // What is the biggest number of value in a bin? We need it cause this value will have a width of 100% of the bandwidth.\r\n    var maxNum = 0\r\n    for (const bin of bins) {\r\n      if (bin.length > maxNum) {\r\n        maxNum = bin.length\r\n      }\r\n    }\r\n    // The maximum width of a violin must be x.bandwidth = the width dedicated to a group\r\n    var xNum = d3.scaleLinear()\r\n      .range([0, BAR_WIDTH])\r\n      .domain([-maxNum, maxNum])\r\n    // Add the shape to this svg!\r\n    const areaGenerator = d3.area()\r\n      .x0((d) => xNum(-d.length))\r\n      .x1((d) => xNum(d.length))\r\n      .y((d) => dataScale(d.x0))\r\n      .curve(d3.curveStep)\r\n    bars.append('path')\r\n      .attr('transform', `translate(${directionsScale(data.directions[i]) - BAR_WIDTH / 2})`)\r\n      .style('fill', '#69b3a2')\r\n      .attr('d', areaGenerator(bins))\r\n  } */\r\n\r\n  for (let i = 0; i < data.quantileSets.length; i++) {\r\n    const x = directionsScale(data.directions[i])\r\n    const top = dataScale(data.quantileSets[i][4])\r\n    const q3 = dataScale(data.quantileSets[i][3])\r\n    const q2 = dataScale(data.quantileSets[i][2])\r\n    const q1 = dataScale(data.quantileSets[i][1])\r\n    const bottom = dataScale(data.quantileSets[i][0])\r\n    // Draw domain line\r\n    bars.append('path')\r\n      .attr('d', d3.line()([[x, top], [x, bottom]]))\r\n      .attr('stroke', QUANTILE_STROKE_COLOR)\r\n      .attr('stroke-width', QUANTILE_STROKE_WIDTH)\r\n      .attr('class', `direction${i}`)\r\n    // Draw Q1 to Q3 bar\r\n    bars.append('rect')\r\n      .attr('width', BAR_WIDTH)\r\n      .attr('x', x - BAR_WIDTH / 2)\r\n      .attr('height', q1 - q3)\r\n      .attr('y', q3)\r\n      .attr('fill', QUANTILE_FILL_COLOR)\r\n      .attr('stroke', QUANTILE_STROKE_COLOR)\r\n      .attr('stroke-width', QUANTILE_STROKE_WIDTH)\r\n      .attr('class', `direction${i}`)\r\n    // Draw Q2 line\r\n    bars.append('path')\r\n      .attr('d', d3.line()([[x - BAR_WIDTH / 2, q2], [x + BAR_WIDTH / 2, q2]]))\r\n      .attr('stroke', QUANTILE_STROKE_COLOR)\r\n      .attr('stroke-width', QUANTILE_STROKE_WIDTH)\r\n      .attr('class', `direction${i}`)\r\n    // Draw quantile values\r\n    const yValues = [0, 0, 0, 0, 0]\r\n    const minOffset = 11\r\n    const centerOffset = 4\r\n    yValues[2] = dataScale(data.quantileSets[i][2]) + centerOffset\r\n    yValues[3] = Math.min(yValues[2] - minOffset, dataScale(data.quantileSets[i][3]) + centerOffset)\r\n    yValues[4] = Math.min(yValues[3] - minOffset, dataScale(data.quantileSets[i][4]) + centerOffset)\r\n    yValues[1] = Math.max(yValues[2] + minOffset, dataScale(data.quantileSets[i][1]) + centerOffset)\r\n    yValues[0] = Math.max(yValues[1] + minOffset, dataScale(data.quantileSets[i][0]) + centerOffset)\r\n    for (let j = 0; j < data.quantileSets[i].length; j++) {\r\n      const quantile = bars.append('g')\r\n        .attr('class', `direction${i} quantile`)\r\n        .style('visibility', 'hidden')\r\n      const x = directionsScale(data.directions[i]) + (i % 2 === 0 ? -1 : 1) * (BAR_WIDTH / 2 + FONT_SIZE / 2)\r\n      quantile.append('text')\r\n        .attr('x', x)\r\n        .attr('y', yValues[j])\r\n        .attr('text-anchor', (i % 2 === 0 ? 'end' : 'start'))\r\n        .text(Math.round(data.quantileSets[i][j]))\r\n        .style('font-size', FONT_SIZE)\r\n        .attr('id', `quantile-text-${i}-${j}`)\r\n    }\r\n  }\r\n\r\n  // ===================== HOVER =====================\r\n\r\n  // Create triggers\r\n  for (let i = 0; i < data.directions.length; i++) {\r\n    bars.append('rect')\r\n      .attr('width', BAR_WIDTH)\r\n      .attr('x', directionsScale(data.directions[i]) - BAR_WIDTH / 2)\r\n      .attr('height', dataScale.range()[0] - dataScale.range()[1] + FONT_SIZE)\r\n      .attr('y', MARGIN.top)\r\n      .attr('fill', 'transparent')\r\n      // Highlight direction\r\n      .on('mouseover', () => {\r\n        d3.selectAll(`.direction${i}`)\r\n          .attr('stroke-width', QUANTILE_STROKE_WIDTH * 2)\r\n        d3.selectAll(`.direction${i}.label`)\r\n          .attr('font-weight', 1000)\r\n        d3.selectAll(`.direction${i}.quantile`)\r\n          .style('visibility', 'visible')\r\n      // Unhighlight direction\r\n      }).on('mouseout', () => {\r\n        d3.selectAll(`.direction${i}`)\r\n          .attr('stroke-width', QUANTILE_STROKE_WIDTH)\r\n        d3.selectAll(`.direction${i}.label`)\r\n          .attr('font-weight', 0)\r\n        d3.selectAll(`.direction${i}.quantile`)\r\n          .style('visibility', 'hidden')\r\n      })\r\n  }\r\n\r\n  // ===================== OTHER =====================\r\n\r\n  // Draw Title\r\n  svg.append('text')\r\n    .attr('x', (WIDTH - MARGIN.right - MARGIN.left) / 2 + MARGIN.left)\r\n    .attr('y', MARGIN.top - FONT_SIZE * 2)\r\n    .attr('text-anchor', 'middle')\r\n    .text(data.title)\r\n    .style('font-size', FONT_SIZE)\r\n\r\n  return [svg, dataScale]\r\n}\r\n\r\n/**\r\n * @param {object} vizData Project data\r\n * @returns {Array<number>} The quantile sets\r\n */\r\nexport function getDelayQuantileSets (vizData) {\r\n  const quantileSets = []\r\n  const delaySets = [[], [], [], []]\r\n  for (const day of vizData) {\r\n    for (let i = 0; i < day.lignes.length; i++) {\r\n      const line = day.lignes[i]\r\n      for (let j = 0; j < line.girouettes.length; j++) {\r\n        const direction = line.girouettes[j]\r\n        for (const trip of direction.voyages) {\r\n          for (const stop of trip.arrets) {\r\n            delaySets[i * day.lignes.length + j].push(stop.minutesEcart)\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n  for (const delaySet of delaySets) {\r\n    quantileSets.push(helper.getQuantiles(delaySet))\r\n  }\r\n  return quantileSets\r\n}\r\n\r\n/**\r\n * @param {object} vizData Project data\r\n * @returns {Array<number>} The quantile sets\r\n */\r\nexport function getTrafficQuantileSets (vizData) {\r\n  const tripSets = [[], [], [], []]\r\n  const daySets = [[], [], [], []]\r\n  const weekSets = [[], [], [], []]\r\n  let lastWeek = helper.getWeekNumber(new Date(Date.parse(vizData[0].date)))[1]\r\n  let weekClients = [0, 0, 0, 0]\r\n  for (const day of vizData) {\r\n    const week = helper.getWeekNumber(new Date(Date.parse(day.date)))[1]\r\n    for (let i = 0; i < day.lignes.length; i++) {\r\n      const line = day.lignes[i]\r\n      for (let j = 0; j < line.girouettes.length; j++) {\r\n        const direction = line.girouettes[j]\r\n        let dayClients = 0\r\n        for (const trip of direction.voyages) {\r\n          let tripClients = 0\r\n          for (const stop of trip.arrets) {\r\n            tripClients += stop.nClients\r\n          }\r\n          dayClients += tripClients\r\n          tripSets[i * day.lignes.length + j].push(tripClients)\r\n        }\r\n        daySets[i * day.lignes.length + j].push(dayClients)\r\n        weekClients[i * day.lignes.length + j] += dayClients\r\n      }\r\n    }\r\n    if (lastWeek !== week) {\r\n      for (let i = 0; i < weekClients.length; i++) {\r\n        weekSets[i].push(weekClients[i])\r\n      }\r\n      weekClients = [0, 0, 0, 0]\r\n      lastWeek = week\r\n    }\r\n  }\r\n  const quantileTripSets = []\r\n  for (const tripSet of tripSets) {\r\n    quantileTripSets.push(helper.getQuantiles(tripSet))\r\n  }\r\n  const quantileDaySets = []\r\n  for (const daySet of daySets) {\r\n    quantileDaySets.push(helper.getQuantiles(daySet))\r\n  }\r\n  const quantileWeekSets = []\r\n  for (const weekSet of weekSets) {\r\n    quantileWeekSets.push(helper.getQuantiles(weekSet))\r\n  }\r\n  return [quantileTripSets, quantileDaySets, quantileWeekSets]\r\n}\r\n","'use strict'\r\n\r\nimport * as helper from './scripts/helper.js'\r\nimport * as preprocess from './scripts/preprocess.js'\r\nimport * as groupedQuantile from './scripts/grouped-quantile.js'\r\n\r\n/**\r\n * @file \r\n * @author Adam Prévost, Armelle Jézéquel, Clara Serruau, Jules Lefebvre, Julien Dupuis\r\n * @version 1.0.0\r\n * \r\n * La structure du projet est inspirée de celle employé pour les TPs de INF8808 créée par Olivia Gélinas.\r\n */\r\n\r\n(function (d3) {\r\n  const svgSize = {\r\n    width: 800,\r\n    height: 625\r\n  }\r\n\r\n  helper.setCanvasSize(svgSize.width, svgSize.height)\r\n  helper.generateMapG(svgSize.width, svgSize.height)\r\n  helper.generateMarkerG(svgSize.width, svgSize.height)\r\n\r\n  // Solution temporaire, éventuellement l'utilisateur peut choisir la période qui l'intéresse, s'il veut inclure les week-end et les fériés.\r\n  const startDate = new Date('2021/09/01')\r\n  const endDate = new Date('2021/12/01')\r\n  const typeJour = 'semaine'\r\n  const ferie = false\r\n\r\n  var vizData = []\r\n\r\n  build()\r\n\r\n  /**\r\n   *   Cette fonction construit la page web\r\n   */\r\n  function build () {\r\n    d3.csv('./donnees_L9_L22.csv').then(function (csvData) {\r\n      // Change les string pour les types appropriés\r\n      csvData.forEach(function (d) {\r\n        d.date = new Date(d.date + ' 00:00:00')\r\n        d.ligne = +d.ligne\r\n        d.voyage = +d.voyage\r\n        d.arret_code = +d.arret_code\r\n        d.montants = +d.montants\r\n        d.Minutes_ecart_planifie = +d.Minutes_ecart_planifie\r\n        d.sequence_arret = +d.sequence_arret\r\n        d.arret_Latitude = +d.arret_Latitude\r\n        d.arret_Longitude = +d.arret_Longitude\r\n      })\r\n      preprocess.addDayType(csvData)\r\n      preprocess.aggregateDataForViz3(csvData, vizData, startDate, endDate, typeJour, ferie)\r\n      groupedQuantile.generateViz3(vizData)\r\n    })\r\n  }\r\n})(d3)\r\n"]}