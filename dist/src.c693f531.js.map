{"version":3,"sources":["scripts/helper.js","scripts/heatmap.js","scripts/preprocess.js","scripts/grouped-quantile.js","index.js"],"names":["generateMapG","width","height","d3","select","append","attr","generateMarkerG","setCanvasSize","appendGraphLabels","g","text","initPanelDiv","style","getSimulation","data","forceSimulation","features","alphaDecay","velocityDecay","force","forceCollide","strength","simulate","simulation","on","selectAll","d","x","y","getProjection","geoMercator","center","scale","getPath","projection","geoPath","getClosestStep","nSteps","domain","BEST_STEPS","step","stepDiff","bestStep","length","i","push","Math","abs","getSteps","steps","unshift","drawHeatmap","vizData","ligne","girouette","indicateur","posLigne","findIndex","e","posGirouette","girouettes","v","voyages","a","arrets","addDayType","jour_semaine","date","getDay","type_jour","isNaN","voyage","ferie","aggregateData","csvData","startDate","endDate","typeJour","Girouette","posVoyage","posArret","codeArret","arret_code","nomArret","arret_nom","minutesEcart","moyMinutesEcart","nClients","moyNClients","ponctualite","tauxPonctualite","minutesEcartClient","moyMinutesEcartClient","Minutes_ecart_planifie","montants","Etat_Ponctualite","average","arr","reduce","b","toFixed","forEach","arret","filter","MARGIN","top","right","bottom","left","FONT_SIZE","DIRECTIONS_ANGLE","QUANTILE_STROKE_COLOR","QUANTILE_FILL_COLOR","QUANTILE_STROKE_WIDTH","NUMBER_OF_TICKS","GRADIENT_COLORS","generateViz3","container","delayGraphContainer","trafficGraphContainer","ResizeObserver","generateDelayGraph","observe","node","generateTrafficGraph","quantileSets","title","generateGroupedQuantileGraph","svg","dataScale","WIDTH","getBoundingClientRect","HEIGHT","enter","insert","html","BAR_WIDTH","linesScale","scaleOrdinal","lines","range","directionsRange","line","directionsScale","directions","maxValue","Number","MIN_SAFE_INTEGER","minValue","MAX_SAFE_INTEGER","quantiles","quantile","scaleLinear","xAxis","lineValuesY","directionValuesY","yAxis","helper","bars","q3","q2","q1","j","textBoundingClientRect","svgSize","Date","csv","then","sequence_arret","arret_Latitude","arret_Longitude","preprocess","console","log","heatmap","groupedQuantile"],"mappings":"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","file":"src.c693f531.js","sourceRoot":"..\\src","sourcesContent":["\r\n/**\r\n * Generates the SVG element g which will contain the map base.\r\n *\r\n * @param {number} width The width of the graph\r\n * @param {number} height The height of the graph\r\n * @returns {*} The d3 Selection for the created g element\r\n */\r\nexport function generateMapG (width, height) {\r\n  return d3.select('.graph')\r\n    .select('svg')\r\n    .append('g')\r\n    .attr('id', 'map-g')\r\n    .attr('width', width)\r\n    .attr('height', height)\r\n}\r\n\r\n/**\r\n * Generates the SVG element g which will contain the map markers.\r\n *\r\n * @param {number} width The width of the graph\r\n * @param {number} height The height of the graph\r\n * @returns {*} The d3 Selection for the created g element\r\n */\r\nexport function generateMarkerG (width, height) {\r\n  return d3.select('.graph')\r\n    .select('svg')\r\n    .append('g')\r\n    .attr('id', 'marker-g')\r\n    .attr('width', width)\r\n    .attr('height', height)\r\n}\r\n\r\n/**\r\n * Sets the size of the SVG canvas containing the graph.\r\n *\r\n * @param {number} width The desired width\r\n * @param {number} height The desired height\r\n */\r\nexport function setCanvasSize (width, height) {\r\n  d3.select('#map').select('svg')\r\n    .attr('width', width)\r\n    .attr('height', height)\r\n}\r\n\r\n/**\r\n * Appends the labels for the graph.\r\n *\r\n * @param {*} g The d3 Selection of the graph's g SVG element\r\n */\r\nexport function appendGraphLabels (g) {\r\n  g.append('text')\r\n    .text('Achalandage et ponctualité des lignes de bus 9 et 22 de la couronne Nord de Montréal')\r\n    .attr('class', 'title')\r\n    .attr('fill', '#000000')\r\n    .attr('font-family', 'myriad-pro')\r\n    .attr('font-size', 28)\r\n    .attr('transform', 'translate(50, 50)')\r\n\r\n  g.append('text')\r\n    .text('Sous-titre')\r\n    .attr('class', 'title')\r\n    .attr('fill', '#000000')\r\n    .attr('font-family', 'myriad-pro')\r\n    .attr('font-size', 18)\r\n    .attr('transform', 'translate(50, 85)')\r\n}\r\n\r\n/**\r\n * Initializes the div which will contain the information panel.\r\n */\r\nexport function initPanelDiv () {\r\n  d3.select('.graph')\r\n    .append('div')\r\n    .attr('id', 'panel')\r\n    .style('width', '215px')\r\n    .style('border', '1px solid black')\r\n    .style('padding', '10px')\r\n    .style('visibility', 'hidden')\r\n}\r\n\r\n/**\r\n * Initializes the simulation used to place the circles\r\n *\r\n * @param {object} data The data to be displayed\r\n * @returns {*} The generated simulation\r\n */\r\nexport function getSimulation (data) {\r\n  return d3.forceSimulation(data.features)\r\n    .alphaDecay(0)\r\n    .velocityDecay(0.75)\r\n    .force('collision',\r\n      d3.forceCollide(5)\r\n        .strength(1)\r\n    )\r\n}\r\n\r\n/**\r\n * Update the (x, y) position of the circles'\r\n * centers on each tick of the simulation.\r\n *\r\n * @param {*} simulation The simulation used to position the cirles.\r\n */\r\nexport function simulate (simulation) {\r\n  simulation.on('tick', () => {\r\n    d3.selectAll('.marker')\r\n      .attr('cx', (d) => d.x)\r\n      .attr('cy', (d) => d.y)\r\n  })\r\n}\r\n\r\n/**\r\n * Sets up the projection to be used.\r\n *\r\n * @returns {*} The projection to use to trace the map elements\r\n */\r\nexport function getProjection () {\r\n  return d3.geoMercator()\r\n    .center([-73.708879, 45.579611])\r\n    .scale(70000)\r\n}\r\n\r\n/**\r\n * Sets up the path to be used.\r\n *\r\n * @param {*} projection The projection used to trace the map elements\r\n * @returns {*} The path to use to trace the map elements\r\n */\r\nexport function getPath (projection) {\r\n  return d3.geoPath()\r\n    .projection(projection)\r\n}\r\n/**\r\n * @param {number} nSteps The ideal number of steps\r\n * @param {*} domain Domain of d3 scale\r\n * @returns {number} The best step to use\r\n */\r\n export function getClosestStep (nSteps, domain) {\r\n  const BEST_STEPS = [\r\n    0.1, 0.2, 0.25, 0.5,\r\n    1, 2, 2.5, 5,\r\n    10, 20, 25, 50,\r\n    100, 200, 250, 500,\r\n    1000, 2000, 2500, 5000,\r\n    10000, 20000, 25000, 50000\r\n  ]\r\n  var step = (domain[1] - domain[0]) / nSteps\r\n  var stepDiff = []\r\n  var bestStep = BEST_STEPS[BEST_STEPS.length - 1]\r\n  for (let i = 0; i < BEST_STEPS.length; i++) {\r\n    stepDiff.push(Math.abs(BEST_STEPS[i] - step))\r\n    if (i > 0 && stepDiff[i] > stepDiff[i - 1]) {\r\n      bestStep = BEST_STEPS[i - 1]\r\n      break\r\n    }\r\n  }\r\n  return bestStep\r\n}\r\n\r\n/**\r\n * @param {number} nSteps The ideal number of steps\r\n * @param {*} domain Domain of d3 scale\r\n * @returns {Array<number>} The best steps\r\n */\r\nexport function getSteps (nSteps, domain) {\r\n  var step = getClosestStep(nSteps, domain)\r\n  var steps = []\r\n  if (domain[0] <= 0 && domain[1] >= 0) {\r\n    steps.push(0)\r\n  } else {\r\n    steps.push(domain[0])\r\n  }\r\n  while (steps[steps.length - 1] < domain[1] - step) {\r\n    steps.push(steps[steps.length - 1] + step)\r\n  }\r\n  while (steps[0] > domain[0] + step) {\r\n    steps.unshift(steps[0] - step)\r\n  }\r\n  return steps\r\n}","// Idée générale pour l'algorithme qui parcours l'objet vizData pour recueillir les valeurs pour chaque carré de la heatmap.\r\n\r\n/**\r\n * @param vizData\r\n * @param ligne\r\n * @param girouette\r\n * @param indicateur\r\n */\r\nexport function drawHeatmap (vizData, ligne, girouette, indicateur) {\r\n  var posLigne = vizData.findIndex(e => e.ligne === ligne)\r\n  var posGirouette = vizData[posLigne].girouettes.findIndex(e => e.girouette === girouette)\r\n\r\n  for (var v = 0; v < vizData[posLigne].girouettes[posGirouette].voyages.length; v++) {\r\n    for (var a = 0; a < vizData[posLigne].girouettes[posGirouette].voyages[v].arrets.length; a++) {\r\n      var valueSquare = vizData[posLigne].girouettes[posGirouette].voyages[v].arrets[a][indicateur]\r\n      //console.log(valueSquare)\r\n    }\r\n  }\r\n}\r\n","// INF8808 - Exo\r\n//\r\n// Adam Prévost - 1947205\r\n// Armelle Jézéquel - 2098157\r\n// Clara Serruau - 2164678\r\n// Jules Lefebvre - 1847158\r\n// Julien Dupuis - 1960997\r\n//\r\n\r\n/**\r\n * Ajout de champs à l'objet\r\n * jour_semaine {0, 1, 2, 3, 4, 5, 6} où 0 = Dimanche\r\n * type_jour {semaine, fin de semaine}\r\n * ferie {true, false}\r\n *\r\n * @param {object[]} data L'array d'objets qui contient les lignes du csv\r\n */\r\nexport function addDayType (data) {\r\n  for (var i = 0; i < data.length; i++) {\r\n    // jour_semaine\r\n    data[i].jour_semaine = data[i].date.getDay()\r\n\r\n    // type_jour\r\n    data[i].jour_semaine === (0 || 6) ? data[i].type_jour = 'fin de semaine' : data[i].type_jour = 'semaine'\r\n\r\n    // ferie\r\n    isNaN(data[i].voyage) ? data[i].ferie = true : data[i].ferie = false\r\n  }\r\n}\r\n/**\r\n * aggregateData() remplit l'objet vizData à partir des données du csv (data)\r\n *\r\n * @param {*} csvData L'array d'objets qui contient les lignes du csv, modifié par preprocess.addDayType()\r\n * @param {*} vizData L'array d'objets qui contient les données consolidées requises pour générer les viz\r\n * @param {*} startDate Date de début\r\n * @param {*} endDate Date de fin\r\n * @param {*} typeJour On considère semaine ou weekend\r\n * @param {*} ferie On considère les fériés si true\r\n */\r\nexport function aggregateData (csvData, vizData, startDate, endDate, typeJour, ferie) {\r\n  // Boucle sur les lignes de csvData pour remplir la structure vizData\r\n  for (var i = 0; i < csvData.length; i++) {\r\n    if (csvData[i].date >= startDate && csvData[i].date <= endDate && csvData[i].type_jour === typeJour && csvData[i].ferie === ferie) {\r\n      if (vizData.length === 0) {\r\n        vizData.push({ ligne: csvData[i].ligne, girouettes: [] })\r\n      }\r\n\r\n      // On ajoute la ligne si elle n'existe pas déjà dans vizData\r\n      var posLigne = vizData.findIndex(e => e.ligne === csvData[i].ligne)\r\n      if (posLigne === -1) {\r\n        vizData.push({ ligne: csvData[i].ligne, girouettes: [] })\r\n        posLigne = vizData.length - 1\r\n      }\r\n\r\n      // On ajoute la girouette si elle n'existe pas déjà dans vizData\r\n      var posGirouette = vizData[posLigne].girouettes.findIndex(e => e.girouette === csvData[i].Girouette)\r\n      if (posGirouette === -1) {\r\n        vizData[posLigne].girouettes.push({ girouette: csvData[i].Girouette, voyages: [] })\r\n        posGirouette = vizData[posLigne].girouettes.length - 1\r\n      }\r\n\r\n      // On ajoute le voyage s'il n'existe pas déjà dans vizData\r\n      var posVoyage = vizData[posLigne].girouettes[posGirouette].voyages.findIndex(e => e.voyage === csvData[i].voyage)\r\n      if (posVoyage === -1) {\r\n        vizData[posLigne].girouettes[posGirouette].voyages.push({ voyage: csvData[i].voyage, arrets: [] })\r\n        posVoyage = vizData[posLigne].girouettes[posGirouette].voyages.length - 1\r\n      }\r\n\r\n      // On ajoute l'arrêt s'il n'existe pas déjà dans vizData\r\n      var posArret = vizData[posLigne].girouettes[posGirouette].voyages[posVoyage].arrets.findIndex(e => e.codeArret === csvData[i].arret_code)\r\n      if (posArret === -1) {\r\n        vizData[posLigne].girouettes[posGirouette].voyages[posVoyage].arrets.push(\r\n          {\r\n            codeArret: csvData[i].arret_code,\r\n            nomArret: csvData[i].arret_nom,\r\n            minutesEcart: [],\r\n            moyMinutesEcart: null,\r\n            nClients: [],\r\n            moyNClients: null,\r\n            ponctualite: [],\r\n            tauxPonctualite: null,\r\n            minutesEcartClient: [],\r\n            moyMinutesEcartClient: null\r\n          })\r\n        posArret = vizData[posLigne].girouettes[posGirouette].voyages[posVoyage].arrets.length - 1\r\n      }\r\n\r\n      vizData[posLigne].girouettes[posGirouette].voyages[posVoyage].arrets[posArret].minutesEcart.push(csvData[i].Minutes_ecart_planifie)\r\n      vizData[posLigne].girouettes[posGirouette].voyages[posVoyage].arrets[posArret].nClients.push(csvData[i].montants)\r\n      vizData[posLigne].girouettes[posGirouette].voyages[posVoyage].arrets[posArret].ponctualite.push(csvData[i].Etat_Ponctualite)\r\n      vizData[posLigne].girouettes[posGirouette].voyages[posVoyage].arrets[posArret].minutesEcartClient.push(csvData[i].Minutes_ecart_planifie * csvData[i].montants)\r\n    }\r\n  }\r\n\r\n  // Fonctions pour créer les indicateurs\r\n  const average = arr => +(arr.reduce((a, b) => a + b, 0) / arr.length).toFixed(2) // https://poopcode.com/calculate-the-average-of-an-array-of-numbers-in-javascript/\r\n  const computeTauxPonctualite = arr => arr.filter(x => x === 'Ponctuel').length / arr.length\r\n\r\n  // Parcours de vizData pour calculer les indicateurs pour chaque ligne.arret\r\n  vizData.forEach(function (ligne) {\r\n    ligne.girouettes.forEach(function (girouette) {\r\n      girouette.voyages.forEach(function (voyage) {\r\n        voyage.arrets.forEach(function (arret) {\r\n          arret.moyMinutesEcart = average(arret.minutesEcart)\r\n          arret.moyNClients = average(arret.nClients)\r\n          arret.moyMinutesEcartClient = average(arret.minutesEcartClient)\r\n          arret.tauxPonctualite = computeTauxPonctualite(arret.ponctualite)\r\n        })\r\n      })\r\n    })\r\n  })\r\n}\r\n","import * as helper from './helper.js'\r\n\r\nconst MARGIN = { top: 100, right: 80, bottom: 150, left: 150 }\r\nconst FONT_SIZE = 16\r\nconst DIRECTIONS_ANGLE = -45\r\nconst QUANTILE_STROKE_COLOR = 'black'\r\nconst QUANTILE_FILL_COLOR = 'lightgray'\r\nconst QUANTILE_STROKE_WIDTH = 2\r\nconst NUMBER_OF_TICKS = 10\r\nconst GRADIENT_COLORS = ['#ffe4e4', '#e4ffe4', '#ffffe4']\r\n\r\n/**\r\n *\r\n */\r\nexport function generateViz3 () {\r\n  // Split container in two\r\n  var container = d3.select('#grouped-quantile-graph-container')\r\n  var delayGraphContainer = container.append('div')\r\n    .style('width', '50%')\r\n    .style('height', '100%')\r\n    .style('float', 'left')\r\n  var trafficGraphContainer = container.append('div')\r\n    .style('width', '50%')\r\n    .style('height', '100%')\r\n    .style('float', 'right')\r\n\r\n  // TODO: Fetch data\r\n  var data = {}\r\n  data.lines = ['9', '22']\r\n  data.directions = ['Lafontaine', 'Montmorency', 'Côté', 'George VI']\r\n\r\n  // Regenerate graphs on resize\r\n  new ResizeObserver(() => { generateDelayGraph(delayGraphContainer, data) })\r\n    .observe(delayGraphContainer.node())\r\n  new ResizeObserver(() => { generateTrafficGraph(trafficGraphContainer, data) })\r\n    .observe(trafficGraphContainer.node())\r\n}\r\n\r\n/**\r\n * @param {Selection} container The div to generate the graph in\r\n * @param {object} data The data to fetch\r\n */\r\nexport function generateDelayGraph (container, data) {\r\n  // TODO: Fetch data\r\n  data.quantileSets = [\r\n    [10, 20, 30, 40, 50],\r\n    [-5, 25, 40, 50, 70],\r\n    [15, 20, 55, 60, 65],\r\n    [40, 50, 60, 70, 90]\r\n  ]\r\n\r\n  // Generate common graph\r\n  data.title = 'Retard Moyen'\r\n  var [svg, dataScale] = generateGroupedQuantileGraph(container, data)\r\n  var WIDTH = container.node().getBoundingClientRect().width\r\n  var HEIGHT = container.node().getBoundingClientRect().height\r\n\r\n  // Set gradients\r\n  svg.append('defs')\r\n    .append('linearGradient')\r\n    .attr('id', 'late-grad')\r\n    .attr('x1', '0%')\r\n    .attr('x2', '0%')\r\n    .attr('y1', '0%')\r\n    .attr('y2', '100%')\r\n    .selectAll('stop')\r\n    .data([GRADIENT_COLORS[0], GRADIENT_COLORS[1]])\r\n    .enter()\r\n    .append('stop')\r\n    .style('stop-color', function (d) { return d })\r\n    .attr('offset', function (d, i) { return 100 * i + '%' })\r\n  svg.append('defs')\r\n    .append('linearGradient')\r\n    .attr('id', 'early-grad')\r\n    .attr('x1', '0%')\r\n    .attr('x2', '0%')\r\n    .attr('y1', '0%')\r\n    .attr('y2', '100%')\r\n    .selectAll('stop')\r\n    .data([GRADIENT_COLORS[1], GRADIENT_COLORS[2]])\r\n    .enter()\r\n    .append('stop')\r\n    .style('stop-color', function (d) { return d })\r\n    .attr('offset', function (d, i) { return 100 * i + '%' })\r\n  // Draw gradients\r\n  svg.insert('rect', '#x-axis')\r\n    .attr('width', WIDTH - MARGIN.left - MARGIN.right)\r\n    .attr('x', MARGIN.left)\r\n    .attr('height', dataScale(15) - MARGIN.top)\r\n    .attr('y', MARGIN.top)\r\n    .attr('fill', GRADIENT_COLORS[0])\r\n  svg.insert('rect', '#x-axis')\r\n    .attr('width', WIDTH - MARGIN.left - MARGIN.right)\r\n    .attr('x', MARGIN.left)\r\n    .attr('height', dataScale(5) - dataScale(15))\r\n    .attr('y', dataScale(15))\r\n    .attr('fill', 'url(#late-grad)')\r\n  svg.insert('rect', '#x-axis')\r\n    .attr('width', WIDTH - MARGIN.left - MARGIN.right)\r\n    .attr('x', MARGIN.left)\r\n    .attr('height', dataScale(-5) - dataScale(5))\r\n    .attr('y', dataScale(5))\r\n    .attr('fill', 'url(#early-grad)')\r\n  svg.insert('rect', '#x-axis')\r\n    .attr('width', WIDTH - MARGIN.left - MARGIN.right)\r\n    .attr('x', MARGIN.left)\r\n    .attr('height', HEIGHT - MARGIN.bottom - dataScale(-5))\r\n    .attr('y', dataScale(-5))\r\n    .attr('fill', GRADIENT_COLORS[2])\r\n  // Set y axis label\r\n  svg.select('#y-axis > .label')\r\n    .text('Minute')\r\n}\r\n\r\n/**\r\n * @param {Selection} container The div to generate the graph in\r\n * @param {object} data The data to fetch\r\n */\r\nexport function generateTrafficGraph (container, data) {\r\n  // TODO: Fetch data\r\n  data.quantileSets = [\r\n    [100, 200, 300, 350, 500],\r\n    [50, 200, 250, 600, 650],\r\n    [200, 350, 400, 600, 700],\r\n    [450, 500, 600, 700, 750]\r\n  ]\r\n\r\n  // Generate common graph\r\n  data.title = 'Achalandage Moyen'\r\n  var [svg] = generateGroupedQuantileGraph(container, data)\r\n  // Set y axis label\r\n  svg.select('#y-axis > .label')\r\n    .text('Nombre de personnes\\npar jour')\r\n}\r\n\r\n/**\r\n * @param {Selection} container The div to generate the graph in\r\n * @param {object} data The data to display\r\n * @returns {Selection} The generated graph as svg\r\n */\r\nexport function generateGroupedQuantileGraph (container, data) {\r\n  // ===================== SETUP =====================\r\n\r\n  // Delete existing content\r\n  container.html('')\r\n  // Set size\r\n  var WIDTH = container.node().getBoundingClientRect().width\r\n  var HEIGHT = container.node().getBoundingClientRect().height\r\n  var BAR_WIDTH = (WIDTH - MARGIN.left - MARGIN.right) / 7\r\n  // Create svg\r\n  var svg = container.append('svg')\r\n    .attr('width', WIDTH)\r\n    .attr('height', HEIGHT)\r\n\r\n  // ===================== SCALES =====================\r\n\r\n  // Create lines scale\r\n  var linesScale = d3.scaleOrdinal()\r\n    .domain(data.lines)\r\n    .range([MARGIN.left + 2 * BAR_WIDTH, MARGIN.left + 5 * BAR_WIDTH])\r\n  // Create directions scale\r\n  var directionsRange = []\r\n  for (const line of data.lines) {\r\n    directionsRange.push(linesScale(line) - BAR_WIDTH / 2)\r\n    directionsRange.push(linesScale(line) + BAR_WIDTH / 2)\r\n  }\r\n  var directionsScale = d3.scaleOrdinal()\r\n    .domain([...data.directions])\r\n    .range(directionsRange)\r\n  // Create data scale\r\n  var maxValue = Number.MIN_SAFE_INTEGER\r\n  var minValue = Number.MAX_SAFE_INTEGER\r\n  for (const quantiles of data.quantileSets) {\r\n    for (const quantile of quantiles) {\r\n      if (maxValue < quantile) {\r\n        maxValue = quantile\r\n      }\r\n      if (minValue > quantile) {\r\n        minValue = quantile\r\n      }\r\n    }\r\n  }\r\n  var dataScale = d3.scaleLinear()\r\n    .domain([minValue, maxValue])\r\n    .range([HEIGHT - MARGIN.bottom - FONT_SIZE, MARGIN.top])\r\n\r\n  // ===================== X AXIS =====================\r\n\r\n  var xAxis = svg.append('g')\r\n    .attr('id', 'x-axis')\r\n  // Draw axis line\r\n  xAxis.append('path')\r\n    .attr('d', d3.line()([\r\n      [MARGIN.left, HEIGHT - MARGIN.bottom],\r\n      [MARGIN.left + 7 * BAR_WIDTH, HEIGHT - MARGIN.bottom]\r\n    ]))\r\n    .attr('stroke', 'black')\r\n  // Draw line values\r\n  const lineValuesY = HEIGHT - MARGIN.bottom + FONT_SIZE * 1.5\r\n  for (const line of data.lines) {\r\n    xAxis.append('text')\r\n      .attr('x', linesScale(line))\r\n      .attr('y', lineValuesY)\r\n      .attr('text-anchor', 'middle')\r\n      .text(line)\r\n      .style('font-size', FONT_SIZE)\r\n  }\r\n  // Draw direction values\r\n  const directionValuesY = lineValuesY + FONT_SIZE\r\n  for (let i = 0; i < data.directions.length; i++) {\r\n    const x = directionsScale(data.directions[i])\r\n    xAxis.append('text')\r\n      .attr('text-anchor', 'end')\r\n      .attr('transform', `translate(${x}, ${directionValuesY}) rotate(${DIRECTIONS_ANGLE})`)\r\n      .text(data.directions[i])\r\n      .style('font-size', FONT_SIZE)\r\n      .attr('class', `direction${i} label`)\r\n  }\r\n  // Draw labels\r\n  xAxis.append('text')\r\n    .attr('x', WIDTH - MARGIN.right + FONT_SIZE / 2)\r\n    .attr('y', lineValuesY)\r\n    .text('Ligne')\r\n    .style('font-size', FONT_SIZE)\r\n  xAxis.append('text')\r\n    .attr('x', WIDTH - MARGIN.right + FONT_SIZE / 2)\r\n    .attr('y', directionValuesY + FONT_SIZE)\r\n    .text('Direction')\r\n    .style('font-size', FONT_SIZE)\r\n\r\n  // ===================== Y AXIS =====================\r\n\r\n  var yAxis = svg.append('g')\r\n    .attr('id', 'y-axis')\r\n  // Draw axis line\r\n  yAxis.append('path')\r\n    .attr('d', d3.line()([\r\n      [MARGIN.left, MARGIN.top],\r\n      [MARGIN.left, HEIGHT - MARGIN.bottom]\r\n    ]))\r\n    .attr('stroke', 'black')\r\n  // Generate steps\r\n  var steps = helper.getSteps(NUMBER_OF_TICKS, dataScale.domain())\r\n  for (const step of steps) {\r\n    const y = dataScale(step)\r\n    // Draw data values\r\n    yAxis.append('text')\r\n      .attr('text-anchor', 'end')\r\n      .attr('x', MARGIN.left - FONT_SIZE)\r\n      .attr('y', y + FONT_SIZE / 2)\r\n      .text(step)\r\n      .style('font-size', FONT_SIZE)\r\n    // Draw ticks\r\n    yAxis.append('path')\r\n      .attr('d', d3.line()([\r\n        [MARGIN.left - FONT_SIZE / 2, y],\r\n        [MARGIN.left, y]]\r\n      ))\r\n      .attr('stroke', QUANTILE_STROKE_COLOR)\r\n      .attr('stroke-width', QUANTILE_STROKE_WIDTH)\r\n  }\r\n  // Draw labels\r\n  yAxis.append('text')\r\n    .attr('x', MARGIN.left - FONT_SIZE / 2)\r\n    .attr('y', MARGIN.top - FONT_SIZE / 2)\r\n    .attr('class', 'label')\r\n    .attr('text-anchor', 'end')\r\n    .text('Unité de données')\r\n    .style('font-size', FONT_SIZE)\r\n\r\n  // ===================== CANDLES =====================\r\n\r\n  var bars = svg.append('g')\r\n    .attr('id', 'candles')\r\n  for (let i = 0; i < data.quantileSets.length; i++) {\r\n    const x = directionsScale(data.directions[i])\r\n    const top = dataScale(data.quantileSets[i][4])\r\n    const q3 = dataScale(data.quantileSets[i][3])\r\n    const q2 = dataScale(data.quantileSets[i][2])\r\n    const q1 = dataScale(data.quantileSets[i][1])\r\n    const bottom = dataScale(data.quantileSets[i][0])\r\n    // Draw domain line\r\n    bars.append('path')\r\n      .attr('d', d3.line()([[x, top], [x, bottom]]))\r\n      .attr('stroke', QUANTILE_STROKE_COLOR)\r\n      .attr('stroke-width', QUANTILE_STROKE_WIDTH)\r\n      .attr('class', `direction${i}`)\r\n    // Draw Q1 to Q3 bar\r\n    bars.append('rect')\r\n      .attr('width', BAR_WIDTH)\r\n      .attr('x', x - BAR_WIDTH / 2)\r\n      .attr('height', q1 - q3)\r\n      .attr('y', q3)\r\n      .attr('fill', QUANTILE_FILL_COLOR)\r\n      .attr('stroke', QUANTILE_STROKE_COLOR)\r\n      .attr('stroke-width', QUANTILE_STROKE_WIDTH)\r\n      .attr('class', `direction${i}`)\r\n    // Draw Q2 line\r\n    bars.append('path')\r\n      .attr('d', d3.line()([[x - BAR_WIDTH / 2, q2], [x + BAR_WIDTH / 2, q2]]))\r\n      .attr('stroke', QUANTILE_STROKE_COLOR)\r\n      .attr('stroke-width', QUANTILE_STROKE_WIDTH)\r\n      .attr('class', `direction${i}`)\r\n    // Draw quantile values\r\n    for (let j = 0; j < data.quantileSets[i].length; j++) {\r\n      const quantile = bars.append('g')\r\n        .attr('class', `direction${i} quantile`)\r\n        .style('visibility', 'hidden')\r\n      quantile.append('text')\r\n        .attr('x', directionsScale(data.directions[i]) + (i % 2 === 0 ? -1 : 1) * (BAR_WIDTH / 2 + FONT_SIZE / 2))\r\n        .attr('y', dataScale(data.quantileSets[i][j]))\r\n        .attr('text-anchor', (i % 2 === 0 ? 'end' : 'start'))\r\n        .text(data.quantileSets[i][j])\r\n        .style('font-size', FONT_SIZE)\r\n        .attr('id', `quantile-text-${i}-${j}`)\r\n      // Text background\r\n      const textBoundingClientRect = quantile.node().getBoundingClientRect()\r\n      quantile.insert('rect', `#quantile-text-${i}-${j}`)\r\n        .attr('width', textBoundingClientRect.width)\r\n        .attr('x', textBoundingClientRect.x)\r\n        .attr('height', textBoundingClientRect.height)\r\n        .attr('y', textBoundingClientRect.y)\r\n        .attr('fill', 'white')\r\n    }\r\n  }\r\n\r\n  // ===================== HOVER =====================\r\n\r\n  // Create triggers\r\n  for (let i = 0; i < data.directions.length; i++) {\r\n    bars.append('rect')\r\n      .attr('width', BAR_WIDTH)\r\n      .attr('x', directionsScale(data.directions[i]) - BAR_WIDTH / 2)\r\n      .attr('height', dataScale.range()[0] - dataScale.range()[1] + FONT_SIZE)\r\n      .attr('y', MARGIN.top)\r\n      .attr('fill', 'transparent')\r\n      // Highlight direction\r\n      .on('mouseover', () => {\r\n        d3.selectAll(`.direction${i}`)\r\n          .attr('stroke-width', QUANTILE_STROKE_WIDTH * 2)\r\n        d3.selectAll(`.direction${i}.label`)\r\n          .style('font-size', FONT_SIZE * 1.5)\r\n        d3.selectAll(`.direction${i}.quantile`)\r\n          .style('visibility', 'visible')\r\n      // Unhighlight direction\r\n      }).on('mouseout', () => {\r\n        d3.selectAll(`.direction${i}`)\r\n          .attr('stroke-width', QUANTILE_STROKE_WIDTH)\r\n        d3.selectAll(`.direction${i}.label`)\r\n          .style('font-size', FONT_SIZE)\r\n        d3.selectAll(`.direction${i}.quantile`)\r\n          .style('visibility', 'hidden')\r\n      })\r\n  }\r\n\r\n  // ===================== OTHER =====================\r\n\r\n  // Draw Title\r\n  svg.append('text')\r\n    .attr('x', (WIDTH - MARGIN.right - MARGIN.left) / 2 + MARGIN.left)\r\n    .attr('y', MARGIN.top - FONT_SIZE * 2)\r\n    .attr('text-anchor', 'middle')\r\n    .text(data.title)\r\n    .style('font-size', FONT_SIZE)\r\n\r\n  return [svg, dataScale]\r\n}","'use strict'\r\n\r\nimport * as helper from './scripts/helper.js'\r\nimport * as heatmap from './scripts/heatmap.js'\r\nimport * as preprocess from './scripts/preprocess.js'\r\nimport * as groupedQuantile from './scripts/grouped-quantile.js'\r\n\r\n/**\r\n * @file \r\n * @author Adam Prévost, Armelle Jézéquel, Clara Serruau, Jules Lefebvre, Julien Dupuis\r\n * @version 1.0.0\r\n * \r\n * La structure du projet est inspirée de celle employé pour les TPs de INF8808 créée par Olivia Gélinas.\r\n */\r\n\r\n(function (d3) {\r\n  const svgSize = {\r\n    width: 800,\r\n    height: 625\r\n  }\r\n\r\n  helper.setCanvasSize(svgSize.width, svgSize.height)\r\n  helper.generateMapG(svgSize.width, svgSize.height)\r\n  helper.generateMarkerG(svgSize.width, svgSize.height)\r\n  helper.appendGraphLabels(d3.select('.main-svg'))\r\n  helper.initPanelDiv()\r\n\r\n  // Solution temporaire, éventuellement l'utilisateur peut choisir la période qui l'intéresse, s'il veut inclure les week-end et les fériés.\r\n  const startDate = new Date('2021-09-01')\r\n  const endDate = new Date('2021-12-01')\r\n  const typeJour = 'semaine'\r\n  const ferie = false\r\n\r\n  var vizData = []\r\n\r\n  build()\r\n  groupedQuantile.generateViz3();\r\n\r\n  /**\r\n   *   Cette fonction construit la page web\r\n   */\r\n  function build () {\r\n    d3.csv('./donnees_L9_L22.csv').then(function (csvData) {\r\n      // Change les string pour les types appropriés\r\n      csvData.forEach(function (d) {\r\n        d.date = new Date(d.date + ' 00:00:00')\r\n        d.ligne = +d.ligne\r\n        d.voyage = +d.voyage\r\n        d.arret_code = +d.arret_code\r\n        d.montants = +d.montants\r\n        d.Minutes_ecart_planifie = +d.Minutes_ecart_planifie\r\n        d.sequence_arret = +d.sequence_arret\r\n        d.arret_Latitude = +d.arret_Latitude\r\n        d.arret_Longitude = +d.arret_Longitude\r\n      })\r\n      //console.log(csvData)\r\n      preprocess.addDayType(csvData)\r\n      preprocess.aggregateData(csvData, vizData, startDate, endDate, typeJour, ferie)\r\n      console.log(vizData)\r\n      heatmap.drawHeatmap(vizData, 9, 'Lafontaine Via Gare  Saint-Jérôme', 'moyMinutesEcart')\r\n    })\r\n  }\r\n})(d3)\r\n"]}